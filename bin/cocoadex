#!/usr/bin/env ruby

require 'methadone'
require 'nokogiri'
require 'cocoadex'

include Methadone::Main
include Methadone::CLILogging
include Cocoadex

logger.error_level = Logger::ERROR

main do |query|
  if options[:verbose]
    logger.error_level = Logger::DEBUG
  end

  if options[:configure]
    DocSetHelper.search_and_index
  elsif options[:'load-docset'] and path = File.expand_path(options[:'load-docset'].first)
    DocSetHelper.search_and_index([path])
  end

  if query
    if Keyword.loaded?
      logger.debug "Loading index..."
      Keyword.read
      Cocoadex.search(query, options[:first])
    else
      puts "No DocSets loaded. Run `cocodex --configure` to search for existing DocSets."
    end
  end
end

version Cocoadex::VERSION
description 'A Class Reference Utility for Cocoa APIs'

arg :query, :optional

on("--verbose","Be verbose")

on("--configure","Index all DocSets in default locations")

on("--first","Load first result when multiple matches exist")

on("-d DOCSET","--load-docset","Load a DocSet into the datastore",/^(.*)$/)

# todo: support --platform, --platform-version, --format [format]

go!